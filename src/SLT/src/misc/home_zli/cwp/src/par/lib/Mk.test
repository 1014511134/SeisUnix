# Run tests in ...par/lib
SHELL = /bin/sh

# Adapt the flags in the following paragraph to your system
ROOT = /usr/local
OPTC = -g
# Search on the word "Comment" to complete adaptation

B = $(ROOT)/bin
I = $(ROOT)/include
L = $(ROOT)/lib

CFLAGS= $(OPTC) -I$I
LFLAGS= -L$L -lpar -lcwp -lm


# Comment out if your make knows about C libs
#.c.a:
#	@$(CC) -c $(CFLAGS) $<
#	@ar rv $@ $*.o
#	@rm -f $*.o

# Comment out unless your ar needs ranlib and you don't have it
#.c.a:
#	@$(CC) -c $(CFLAGS) $<
#	@lorder $*.o | tsort | xargs ar qv $@
#	@rm -f $*.o
# Note: if you don't have xargs, alternate lorder line is:
#	@ar rv $@ `lorder $*.o | tsort`


T=Test

STD =			\
	$T/ealloc

SPECIAL =		\
	$T/errpkge	\
	$T/getpars	\
	$T/syscalls	\
	$T/subcalls


test:	$(STD) $(SPECIAL)


$(STD):	$$(@F).c
	$(CC) $(CFLAGS) -DTEST $? $(LFLAGS) -o $@
	@chmod 755 $@
	@echo "testdriver: $(@F) installed in $T"
	-$@ <$@.in >$@.out

$T/errpkge:	errpkge.c
	$(CC) $(CFLAGS) -DTEST $? $(LFLAGS) -o $@
	@chmod 755 $@
	@echo "testdriver: $(@F) installed in $T"
	@echo "Running benchmark"
	-$T/errpkge not_here

$T/getpars:	getpars.c
	$(CC) $(CFLAGS) -DTEST $? $(LFLAGS) -o $@
	@chmod 755 $@
	@echo "testdriver: $(@F) installed in $T"
	@echo getpars ready--running TEST 1: get scalar
	-$T/getpars v=123
	@pause
	@echo getpars ready--running TEST 2: get vector
	-$T/getpars vh=1,2,3
	@pause
	@echo getpars ready--running TEST 3: get parfile
	-$T/getpars par=Test/parfile
	-$T/getpars par=Test/parfile aux=Test/auxfile

$T/syscalls:	syscalls.c
	$(CC) $(CFLAGS) -DTEST $? $(LFLAGS) -o $@
	@chmod 755 $@
	@echo "testdriver: $(@F) installed in $T"
	@echo syscalls--testing redirected STDIN
	@echo "Should get 3 standard lines + eread selfdoc.c
	-$T/syscalls <selfdoc.c
	@echo syscalls--testing piped STDIN
	@echo "Should get 3 standard lines + pread selfdoc.c
	-cat selfdoc.c | $T/syscalls

$T/subcalls:	subcalls.c
	$(CC) $(CFLAGS) -DTEST $? $(LFLAGS) -o $@
	@chmod 755 $@
	@echo "testdriver: $(@F) installed in $T"
	@echo subcalls--testing redirected STDIN
	@echo "Should get 3 standard lines + eread selfdoc.c
	-$T/subcalls <selfdoc.c
	@echo subcalls--testing piped STDIN
	@echo "Should get 3 standard lines + pread selfdoc.c
	-cat selfdoc.c | $T/subcalls


compare:
	@-for i in $(STD)			;\
	do					 \
		echo "diff $$i.std $$i.out" 	;\
		diff $$i.std $$i.out	 	;\
	done

remake:
	@-rm $(STD) $(SPECIAL)
	make -f Mk.test
clean:
	rm -f junk* core a.out
